class Solution {
    public boolean isValidSudoku(char[][] board) {
        
        int m = board.length, n= board[0].length;
        Set<Character> list = new HashSet<>();
        
        for(int i=0; i<m; i++){
            for(int j=0; j<n;j++){
                
                if(list.contains(board[i][j]) && board[i][j] != '.')
                    return false;
                else
                   list.add(board[i][j]); 
                
                if(j == n-1)
                    list.clear();
            }
        }

        for(int j=0; j<n; j++){
            for(int i=0; i<m;i++){
                
               if(list.contains(board[i][j]) && board[i][j] != '.')
                    return false;
               else
                   list.add(board[i][j]); 
                
               if(i == m-1)
                    list.clear();
            }
        }
        
        for(int i=0; i<m;i=i+3){
            for(int j=0; j<n;j=j+3){
                for(int k=0;k<3;k++){
                    for(int l=0; l<3;l++){
                        if(list.contains(board[k+i][l+j]) && board[k+i][l+j] != '.')
                            return false;
                        else
                            list.add(board[k+i][l+j]);   
                    }
                }
               list.clear();
            }
        }
        
        return true;
    }
}
